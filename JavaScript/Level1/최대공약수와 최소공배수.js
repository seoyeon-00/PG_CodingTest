/*
[문제]
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 
배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 
예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

[제한 사항]
- 두 수는 1이상 1000000이하의 자연수입니다.

[입출력]
|   n   |   m   |   result   |
|-------|-------|------------|
|   3   |   12  |   [3, 12]  |
|   2   |	   5  |   [1, 10]  |
 */

function solution(n, m) {
  // 최대공약수 : 두 수의 공약수 중 작은 큰 수
  let gcd = 1;

  // 2 ~ 두수의 작은값 까지 반복문 실행
  // n, m이 공통으로 나눠지는 수를 gcd에 할당
  for (var i = 2; i <= Math.min(n, m); i++) {
    if (n % i === 0 && m % i === 0) {
      gcd = i;
    }
  }

  // 최소공배수: 두 수의 공배수 중 가장 작은 수
  // lcm을 n과 m으로 공통으로 나누어 떨어지는 수를 lcm에 리턴
  let lcm = 1;
  while (true) {
    if (lcm % n === 0 && lcm % m === 0) {
      break;
    }
    lcm++;
  }

  // 최대공약수, 최소공배수 배열 리턴
  return [gcd, lcm];
}
