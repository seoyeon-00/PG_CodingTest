/*
[문제]
효진이는 멀리 뛰기를 연습하고 있습니다. 
효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
(1칸, 1칸, 1칸, 1칸)
(1칸, 2칸, 1칸)
(1칸, 1칸, 2칸)
(2칸, 1칸, 1칸)
(2칸, 2칸)
의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 
멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 
여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 
예를 들어 4가 입력된다면, 5를 return하면 됩니다.

[제한 사항]
n은 1 이상, 2000 이하인 정수입니다.

[입출력]
|     n     |   result   |
|-----------|------------|
|     4     |      5     |
|     3     |      3     |
*/
function solution(n) {
  const jumps = Array.from(n);

  // 칸이 1개일 때 1가지 방법. 칸이 2개일 때 2가지 방법을 사용
  jumps[1] = 1;
  jumps[2] = 2;

  // 피보나치수열 계산
  // 반복문 순회하며 jumps[i]를 저장 -> 반복된 계산을 줄이기 위해 결과를 메모이제이션
  // jumps[3]은 jump[1] + jump[2]의 값을 가지고 있으므로 결과값을 저장
  // jumps[4] = jump[2] + jump[3]에서 이전에 반복문을 통해 얻어진 값은 대입하여 구현함.
  for (var i = 3; i <= n; i++) {
    jumps[i] = (jumps[i - 2] + jumps[i - 1]) % 1234567; // jumps[i]에 저장
  }

  return jumps[n];
}
